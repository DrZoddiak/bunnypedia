apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

androidExtensions {
    experimental = true
}

kapt {
    useBuildCache = true
}

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.fueledbycaffeine.bunnypedia"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 9
        versionName "0.9"

        multiDexEnabled true
    }

    dexOptions {
        preDexLibraries true
    }

    signingConfigs {
        release {
            def password = getPassword(defaultConfig.applicationId)
            storeFile file("$rootProject.projectDir/bunnypedia.jks")
            storePassword password
            keyAlias 'bunnypedia'
            keyPassword password
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        debugMinified.initWith(buildTypes.debug)
        debugMinified {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release

            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    jcenter()
    google()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    // Support
    def supportVersion = "27.0.2"
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:recyclerview-v7:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"
    implementation "com.android.support:palette-v7:$supportVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.google.android:flexbox:0.3.2'

    def archComponentsVersion = "1.1.0"
    implementation "android.arch.lifecycle:runtime:$archComponentsVersion"
    implementation "android.arch.lifecycle:extensions:$archComponentsVersion"

    // Dependency injection
    def daggerVersion = "2.14.1"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    def rxBindingVersion = "2.0.0"
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxBindingVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rxBindingVersion"

    def glideVersion = '4.5.0'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.squareup.moshi:moshi-kotlin:1.5.0"
    implementation "me.saket:better-link-movement-method:2"
    implementation 'com.futuremind.recyclerfastscroll:fastscroll:0.2.5'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.6.0'

    // Date/Time
    implementation 'net.danlew:android.joda:2.9.9.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    def ankoVersion = "0.10.4"
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "org.jetbrains.anko:anko-sdk23:$ankoVersion"
    implementation "org.jetbrains.anko:anko-support-v4-commons:$ankoVersion"
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$ankoVersion"

    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }
}

def getPassword(String item) {
    def stdout = new ByteArrayOutputStream()
    def stderr = new ByteArrayOutputStream()
    exec {
        commandLine 'security', '-q', 'find-generic-password', '-s', item, '-w'
        standardOutput = stdout
        errorOutput = stderr
        ignoreExitValue true
    }
    //noinspection GroovyAssignabilityCheck
    stdout.toString().trim()
}
