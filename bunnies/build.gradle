apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

androidExtensions {
    experimental = true
}

kapt {
    useBuildCache = true
}

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.fueledbycaffeine.bunnypedia"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 26
        versionName "0.19"

        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries true
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        quiet true
        lintConfig rootProject.file('lint.xml')

        warningsAsErrors true
        checkDependencies true
        checkTestSources true
        explainIssues false

        // We run a full lint analysis as build part in CI, so skip vital checks for assemble task.
        checkReleaseBuilds false
    }

    signingConfigs {
        release {
            def password = getPassword(defaultConfig.applicationId)
            storeFile file("$rootProject.projectDir/bunnypedia.jks")
            storePassword password
            keyAlias 'bunnypedia'
            keyPassword password
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            signingConfig signingConfigs.release

            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    jcenter()
    google()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    // https://developer.android.com/jetpack/androidx/versions/stable-channel
    // Support
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "com.google.android.material:material:1.1.0"
    implementation 'com.google.android:flexbox:2.0.0'

    def archComponentsVersion = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime:$archComponentsVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$archComponentsVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archComponentsVersion"
    def navVersion = "2.2.2"
    implementation "androidx.navigation:navigation-fragment:$navVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"
    implementation "androidx.navigation:navigation-fragment:$navVersion"
    def roomVersion = "2.2.5"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    def pagingVersion = "2.1.2"
    implementation "androidx.paging:paging-runtime:$pagingVersion"
    implementation "androidx.paging:paging-rxjava2:$pagingVersion"
    implementation 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'

    def epoxyVersion = "3.9.0"
    implementation "com.airbnb.android:epoxy:$epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"

    // Dependency injection
    def daggerVersion = "2.26"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    def rxBindingVersion = "3.1.0"
    implementation "com.jakewharton.rxbinding3:rxbinding:$rxBindingVersion"
    implementation "com.jakewharton.rxbinding3:rxbinding-appcompat:$rxBindingVersion"

    def glideVersion = '4.11.0'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "me.saket:better-link-movement-method:2"
    implementation 'com.futuremind.recyclerfastscroll:fastscroll:0.2.5'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    def ankoVersion = "0.10.8"
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "org.jetbrains.anko:anko-sdk23:$ankoVersion"

    implementation "com.google.firebase:firebase-crashlytics:17.1.0"
}

def getPassword(String item) {
    if (System.getenv('CI') != null) {
        System.getenv('ANDROID_KEYSTORE_PASSWORD')
    } else {
        def stdout = new ByteArrayOutputStream()
        def stderr = new ByteArrayOutputStream()
        exec {
            commandLine 'security', '-q', 'find-generic-password', '-s', item, '-w'
            standardOutput = stdout
            errorOutput = stderr
            ignoreExitValue true
        }
        //noinspection GroovyAssignabilityCheck
        stdout.toString().trim()
    }
}
